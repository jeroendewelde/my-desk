{"version":3,"sources":["App/components/Suzanne/assets/suzanne.glb","App/components/Suzanne/index.jsx","App/lib/MatCap/index.js","App/components/Suzanne/MatcapTexture.jsx","App/components/Suzanne/NormalTexture.jsx","App/components/Suzanne/PhysicalMaterial.jsx","App/components/Suzanne/StandardMaterial.jsx","App/components/Suzanne/ToonMaterial.jsx","App/components/Lighting/index.jsx","App/components/Lighting/indexGui.jsx","App/components/Lighting/Studio.jsx","App/components/Lighting/StudioGui.jsx","App/components/Lighting/ThreePoint.jsx","App/components/Lighting/ThreePointGui.jsx","App/Content.jsx","App/index.jsx","reportWebVitals.js","index.jsx"],"names":["Suzanne","useGLTF","suzanneGlb","nodes","materials","geometry","material","MatCap","id","GREEN","size","XS","SM","MD","LG","XL","SuzanneMatcapTexture","useMatcapTexture","matcap","SuzanneNormalTexture","useNormalTexture","anisotropy","offset","repeat","normalMap","color","SuzannePhysicalMaterial","useControls","dithering","label","value","opacity","max","min","transparent","emissive","emissiveIntensity","metalness","refractionRatio","roughness","wireframe","clearcoat","clearcoatRoughness","ior","reflectivity","sheen","sheenRoughness","sheenTint","specularIntensity","specularTint","thickness","transmission","args","position","rotation","map","v","MathUtils","degToRad","SuzanneStandardMaterial","SuzanneToonMaterial","Lighting","intensity","castShadow","angle","penumbra","LightingGui","directionalLightColor","directionalLightIntensity","directionalLightPosition","x","z","pointLightColor","pointLightIntensity","pointLightPosition","spotLightColor","spotLightIntensity","spotLightPenumbra","spotLightPosition","spotLightTarget","scene","useThree","target","Object3D","add","directionalLightRef","useRef","pointLightRef","spotLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","useFrame","translateX","translateZ","ref","LightingStudio","LightingStudioGui","ambientLightIntensity","frontLightColor","frontLightIntensity","leftLightColor","leftLightIntensity","rightLightColor","rightLightIntensity","frontLightRef","leftLightRef","rightLightRef","LightingThreePoint","LightingThreePointGui","backLightColor","backLightIntensity","fillLightColor","fillLightIntensity","keyLightColor","keyLightIntensity","backLightRef","fillLightRef","keyLightRef","components","lightings","Content","showStats","showAxesHelper","showGridHelper","useComponent","options","useLighting","useLightingGui","showComponent","name","showLighting","OrbitControls","enablePan","enableRotate","enableZoom","Stats","fallback","App","linear","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d6c6c78.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/suzanne.2b4b9514.glb\";","import { useGLTF } from \"@react-three/drei\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst Suzanne = () => {\n  const { nodes, materials } = useGLTF(suzanneGlb, true);\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry} material={materials[\"Paars\"]} />\n    </group>\n  );\n};\n\nexport default Suzanne;\n","// https://github.com/emmelleppi/matcaps\nconst MatCap = {\n  id: {\n    GREEN: \"54C104_BBFA0F_97EF04_7AE104\",\n  },\n  size: {\n    XS: 64,\n    SM: 128,\n    MD: 256,\n    LG: 512,\n    XL: 1024,\n  },\n};\n\nexport default MatCap;\n","import { useGLTF, useMatcapTexture } from \"@react-three/drei\";\n\nimport MatCap from \"../../lib/MatCap\";\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneMatcapTexture = () => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n  const [matcap] = useMatcapTexture(MatCap.id.GREEN, MatCap.size.XL);\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry}>\n        <meshMatcapMaterial matcap={matcap} />\n      </mesh>\n    </group>\n  );\n};\n\nexport default SuzanneMatcapTexture;\n","import { useGLTF, useNormalTexture } from \"@react-three/drei\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneNormalTexture = () => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n  const [normalMap] = useNormalTexture(\n    8, // https://github.com/emmelleppi/normal-maps/blob/master/normals.json\n    {\n      anisotropy: 8,\n      offset: [0, 0],\n      repeat: [10, 10],\n    },\n  );\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry}>\n        <meshStandardMaterial color={0xff0000} normalMap={normalMap} />\n      </mesh>\n    </group>\n  );\n};\n\nexport default SuzanneNormalTexture;\n","import { MathUtils } from \"three\";\nimport { Plane, useGLTF } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzannePhysicalMaterial = () => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\n    dithering: { label: \"Dithering\", value: false },\n    opacity: { label: \"Opacity\", max: 1, min: 0, value: 1 },\n    transparent: { label: \"Transparent\", value: false },\n  });\n\n  const {\n    color,\n    emissive,\n    emissiveIntensity,\n    metalness,\n    refractionRatio,\n    roughness,\n    wireframe,\n  } = useControls(\"StandardMaterial\", {\n    color: { label: \"Color\", value: \"#ffffff\" },\n    emissive: { label: \"Emissive\", value: \"#000000\" },\n    emissiveIntensity: {\n      label: \"Emissive Intensity\",\n      max: 5,\n      min: 0,\n      value: 1,\n    },\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\n    refractionRatio: {\n      label: \"Refraction Ratio\",\n      max: 2,\n      min: 0,\n      value: 0.98,\n    },\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\n    wireframe: { label: \"Wireframe\", value: false },\n  });\n\n  const {\n    clearcoat,\n    clearcoatRoughness,\n    ior,\n    reflectivity,\n    sheen,\n    sheenRoughness,\n    sheenTint,\n    specularIntensity,\n    specularTint,\n    thickness,\n    transmission,\n  } = useControls(\"Physical Material\", {\n    clearcoat: { label: \"Clearcoat\", max: 1, min: 0, value: 0 },\n    clearcoatRoughness: {\n      label: \"Clearcoat Roughness\",\n      max: 1,\n      min: 0,\n      value: 0,\n    },\n    ior: { label: \"Index of Refraction\", max: 2.333, min: 1, value: 1.5 },\n    reflectivity: { label: \"Reflectivity\", max: 1, min: 0, value: 0.5 },\n    sheen: { label: \"Sheen\", max: 1, min: 0, value: 0 },\n    sheenRoughness: { label: \"Sheen Roughness\", max: 1, min: 0, value: 1 },\n    sheenTint: { label: \"Sheen Tint\", value: \"#ffffff\" },\n    specularIntensity: {\n      label: \"Specular Intensity\",\n      max: 1,\n      min: 0,\n      value: 1,\n    },\n    specularTint: { label: \"Specular Tint\", value: \"#ffffff\" },\n    thickness: { label: \"Thickness\", max: 10, min: 0, value: 0.01 },\n    transmission: { label: \"Transmission\", max: 1, min: 0, value: 0 },\n  });\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry}>\n        <meshPhysicalMaterial\n          color={color}\n          clearcoat={clearcoat}\n          clearcoatRoughness={clearcoatRoughness}\n          emissive={emissive}\n          emissiveIntensity={emissiveIntensity}\n          dithering={dithering}\n          ior={ior}\n          metalness={metalness}\n          opacity={opacity}\n          reflectivity={reflectivity}\n          refractionRatio={refractionRatio}\n          roughness={roughness}\n          transparent={transparent}\n          sheen={sheen}\n          sheenRoughness={sheenRoughness}\n          sheenTint={sheenTint}\n          specularIntensity={specularIntensity}\n          specularTint={specularTint}\n          thickness={thickness}\n          transmission={transmission}\n          wireframe={wireframe}\n        />\n      </mesh>\n      <Plane\n        args={[2, 2]}\n        position={[0, 0, -1]}\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\n      />\n    </group>\n  );\n};\n\nexport default SuzannePhysicalMaterial;\n","import { MathUtils } from \"three\";\nimport { Plane, useGLTF } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneStandardMaterial = () => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n\n  const { dithering, opacity, transparent } = useControls(\"Material\", {\n    dithering: { label: \"Dithering\", value: false },\n    opacity: { label: \"Opacity\", max: 1, min: 0, value: 1 },\n    transparent: { label: \"Transparent\", value: false },\n  });\n\n  const {\n    color,\n    emissive,\n    emissiveIntensity,\n    metalness,\n    refractionRatio,\n    roughness,\n    wireframe,\n  } = useControls(\"StandardMaterial\", {\n    color: { label: \"Color\", value: \"#ffffff\" },\n    emissive: { label: \"Emissive\", value: \"#000000\" },\n    emissiveIntensity: {\n      label: \"Emissive Intensity\",\n      max: 5,\n      min: 0,\n      value: 1,\n    },\n    metalness: { label: \"Metalness\", max: 1, min: 0, value: 0 },\n    refractionRatio: {\n      label: \"Refraction Ratio\",\n      max: 2,\n      min: 0,\n      value: 0.98,\n    },\n    roughness: { label: \"Roughness\", max: 1, min: 0, value: 1 },\n    wireframe: { label: \"Wireframe\", value: false },\n  });\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry}>\n        <meshStandardMaterial\n          color={color}\n          emissive={emissive}\n          emissiveIntensity={emissiveIntensity}\n          dithering={dithering}\n          metalness={metalness}\n          opacity={opacity}\n          refractionRatio={refractionRatio}\n          roughness={roughness}\n          transparent={transparent}\n          wireframe={wireframe}\n        />\n      </mesh>\n      <Plane\n        args={[2, 2]}\n        position={[0, 0, -1]}\n        rotation={[0, 0, 45].map((v) => MathUtils.degToRad(v))}\n      />\n    </group>\n  );\n};\n\nexport default SuzanneStandardMaterial;\n","import { useGLTF } from \"@react-three/drei\";\n\nimport suzanneGlb from \"./assets/suzanne.glb\";\n\nconst SuzanneToonMaterial = () => {\n  const { nodes } = useGLTF(suzanneGlb, true);\n\n  return (\n    <group>\n      <mesh geometry={nodes.Suzanne.geometry}>\n        <meshToonMaterial />\n      </mesh>\n    </group>\n  );\n};\n\nexport default SuzanneToonMaterial;\n","import { MathUtils } from \"three\";\n\nconst Lighting = () => {\n  return (\n    <>\n      <ambientLight color={0xffffff} intensity={0.1} />\n      <pointLight\n        castShadow={true}\n        color={0xffcc77}\n        intensity={0.5}\n        position={[-4, 1, -4]}\n      />\n      <spotLight\n        angle={MathUtils.degToRad(30)}\n        castShadow={true}\n        color={0xffcc77}\n        intensity={0.5}\n        penumbra={0.5}\n        position={[0, 4, 0]}\n      />\n    </>\n  );\n};\n\nexport default Lighting;\n","import { useRef } from \"react\";\nimport {\n  DirectionalLightHelper,\n  MathUtils,\n  Object3D,\n  PointLightHelper,\n  SpotLightHelper,\n} from \"three\";\nimport { useControls } from \"leva\";\nimport { useHelper } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\n\nconst LightingGui = () => {\n  const {\n    directionalLightColor,\n    directionalLightIntensity,\n    directionalLightPosition,\n  } = useControls(\"Lighting - Directional Light\", {\n    directionalLightColor: { label: \"Color\", value: \"#ffffff\" },\n    directionalLightIntensity: {\n      label: \"Intensity\",\n      max: 20,\n      min: 0,\n      value: 0.5,\n    },\n    directionalLightPosition: { label: \"Position XZ\", value: { x: 4, z: 1 } },\n  });\n  const { pointLightColor, pointLightIntensity, pointLightPosition } =\n    useControls(\"Lighting - Point Light\", {\n      pointLightColor: { label: \"Color\", value: \"#ffcc77\" },\n      pointLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\n      pointLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\n    });\n  const {\n    spotLightColor,\n    spotLightIntensity,\n    spotLightPenumbra,\n    spotLightPosition,\n    spotLightTarget,\n  } = useControls(\"Lighting - Spotlight\", {\n    spotLightColor: { label: \"Color\", value: \"#ffcc77\" },\n    spotLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.5 },\n    spotLightPenumbra: { label: \"Penumbra\", value: 0.5 },\n    spotLightPosition: { label: \"Position XZ\", value: { x: -4, z: -4 } },\n    spotLightTarget: { label: \"Target XZ\", value: { x: 0, z: 0 } },\n  });\n\n  const { scene } = useThree();\n  const target = new Object3D();\n  scene.add(target);\n\n  const directionalLightRef = useRef();\n  const pointLightRef = useRef();\n  const spotLightRef = useRef();\n  const helperSize = 0.5;\n\n  useHelper(\n    directionalLightRef,\n    DirectionalLightHelper,\n    helperSize,\n    directionalLightColor,\n  );\n  useHelper(pointLightRef, PointLightHelper, helperSize, pointLightColor);\n  useHelper(spotLightRef, SpotLightHelper, spotLightColor);\n\n  useFrame(() => {\n    target.translateX(spotLightTarget.x);\n    target.translateZ(spotLightTarget.z);\n  });\n\n  return (\n    <>\n      <ambientLight color={0xffffff} intensity={0.1} />\n      <directionalLight\n        castShadow={true}\n        color={directionalLightColor}\n        intensity={directionalLightIntensity}\n        position={[directionalLightPosition.x, 4, directionalLightPosition.z]}\n        ref={directionalLightRef}\n      />\n      <pointLight\n        castShadow={true}\n        color={pointLightColor}\n        intensity={pointLightIntensity}\n        position={[pointLightPosition.x, 1, pointLightPosition.z]}\n        ref={pointLightRef}\n      />\n      <spotLight\n        angle={MathUtils.degToRad(30)}\n        castShadow={true}\n        color={spotLightColor}\n        intensity={spotLightIntensity}\n        penumbra={spotLightPenumbra}\n        position={[spotLightPosition.x, 4, spotLightPosition.z]}\n        ref={spotLightRef}\n        target={target}\n      />\n    </>\n  );\n};\n\nexport default LightingGui;\n","const LightingStudio = () => {\n  return (\n    <>\n      <ambientLight intensity={0.1} />\n      <directionalLight\n        castShadow={true}\n        color=\"hsl(0, 0%, 100%)\"\n        intensity={0.4}\n        position={[0, 2, 4]}\n      />\n      <directionalLight\n        castShadow={true}\n        color=\"hsl(210, 100%, 70%)\"\n        intensity={0.4}\n        position={[-4, 0, 0]}\n      />\n      <directionalLight\n        castShadow={true}\n        color=\"hsl(30, 100%, 70%)\"\n        intensity={0.4}\n        position={[4, 0, 0]}\n      />\n    </>\n  );\n};\n\nexport default LightingStudio;\n","import { useRef } from \"react\";\nimport { DirectionalLightHelper } from \"three\";\nimport { useHelper } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\nconst LightingStudioGui = () => {\n  const { ambientLightIntensity } = useControls(\"Lighting - Ambient Light\", {\n    ambientLightIntensity: { label: \"Intensity\", max: 5, min: 0, value: 0.1 },\n  });\n  const { frontLightColor, frontLightIntensity } = useControls(\n    \"Lighting - Front Light\",\n    {\n      frontLightColor: { label: \"Color\", value: \"hsl(0, 0%, 100%)\" },\n      frontLightIntensity: {\n        label: \"Intensity\",\n        max: 2,\n        min: 0,\n        value: 0.4,\n      },\n    },\n  );\n  const { leftLightColor, leftLightIntensity } = useControls(\n    \"Lighting - Left Light\",\n    {\n      leftLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\n      leftLightIntensity: {\n        label: \"Intensity\",\n        max: 2,\n        min: 0,\n        value: 1,\n      },\n    },\n  );\n  const { rightLightColor, rightLightIntensity } = useControls(\n    \"Lighting - Right Light\",\n    {\n      rightLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\n      rightLightIntensity: {\n        label: \"Intensity\",\n        max: 2,\n        min: 0,\n        value: 1,\n      },\n    },\n  );\n\n  const frontLightRef = useRef();\n  const leftLightRef = useRef();\n  const rightLightRef = useRef();\n  const helperSize = 0.5;\n\n  useHelper(frontLightRef, DirectionalLightHelper, helperSize, frontLightColor);\n  useHelper(leftLightRef, DirectionalLightHelper, helperSize, leftLightColor);\n  useHelper(rightLightRef, DirectionalLightHelper, helperSize, rightLightColor);\n\n  return (\n    <>\n      <ambientLight intensity={ambientLightIntensity} />\n      <directionalLight\n        castShadow={true}\n        color={frontLightColor}\n        intensity={frontLightIntensity}\n        position={[0, 2, 4]}\n        ref={frontLightRef}\n      />\n      <directionalLight\n        castShadow={true}\n        color={leftLightColor}\n        intensity={leftLightIntensity}\n        position={[-4, 0, 0]}\n        ref={leftLightRef}\n      />\n      <directionalLight\n        castShadow={true}\n        color={rightLightColor}\n        intensity={rightLightIntensity}\n        position={[4, 0, 0]}\n        ref={rightLightRef}\n      />\n    </>\n  );\n};\n\nexport default LightingStudioGui;\n","const LightingThreePoint = () => {\n  return (\n    <>\n      <ambientLight intensity={0.1} />\n      <spotLight\n        // Back Light\n        castShadow={true}\n        color=\"hsl(0, 0%, 70%)\"\n        intensity={0.75}\n        position={[4, 2, -4]}\n      />\n      <spotLight\n        // Fill Light\n        castShadow={true}\n        color=\"hsl(210, 100%, 70%)\"\n        intensity={0.75}\n        position={[-4, 2, 4]}\n      />\n      <spotLight\n        // Key Light\n        castShadow={true}\n        color=\"hsl(30, 100%, 70%)\"\n        intensity={0.75}\n        position={[4, 2, 4]}\n      />\n    </>\n  );\n};\n\nexport default LightingThreePoint;\n","import { useRef } from \"react\";\nimport { SpotLightHelper } from \"three\";\nimport { useControls } from \"leva\";\nimport { useHelper } from \"@react-three/drei\";\n\nconst LightingThreePointGui = () => {\n  const { backLightColor, backLightIntensity } = useControls(\n    \"Lighting - Back Light\",\n    {\n      backLightColor: { label: \"Color\", value: \"hsl(0, 0%, 70%)\" },\n      backLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\n    },\n  );\n  const { fillLightColor, fillLightIntensity } = useControls(\n    \"Lighting - Fill Light\",\n    {\n      fillLightColor: { label: \"Color\", value: \"hsl(210, 100%, 70%)\" },\n      fillLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\n    },\n  );\n  const { keyLightColor, keyLightIntensity } = useControls(\n    \"Lighting - Key Light\",\n    {\n      keyLightColor: { label: \"Color\", value: \"hsl(30, 100%, 70%)\" },\n      keyLightIntensity: { label: \"Intensity\", max: 20, min: 0, value: 0.75 },\n    },\n  );\n\n  const backLightRef = useRef();\n  const fillLightRef = useRef();\n  const keyLightRef = useRef();\n\n  useHelper(backLightRef, SpotLightHelper, backLightColor);\n  useHelper(fillLightRef, SpotLightHelper, fillLightColor);\n  useHelper(keyLightRef, SpotLightHelper, keyLightColor);\n\n  return (\n    <>\n      <ambientLight intensity={0.1} />\n      <spotLight\n        // Back Light\n        castShadow={true}\n        color={backLightColor}\n        intensity={backLightIntensity}\n        position={[4, 2, -4]}\n        ref={backLightRef}\n      />\n      <spotLight\n        // Fill Light\n        castShadow={true}\n        color={fillLightColor}\n        intensity={fillLightIntensity}\n        position={[-4, 2, 4]}\n        ref={fillLightRef}\n      />\n      <spotLight\n        // Key Light\n        castShadow={true}\n        color={keyLightColor}\n        intensity={keyLightIntensity}\n        position={[4, 2, 4]}\n        ref={keyLightRef}\n      />\n    </>\n  );\n};\n\nexport default LightingThreePointGui;\n","import { Suspense } from \"react\";\nimport { OrbitControls, Stats } from \"@react-three/drei\";\nimport { useControls } from \"leva\";\n\n// Components\nimport Suzanne from \"./components/Suzanne\";\nimport SuzanneMatcapTexture from \"./components/Suzanne/MatcapTexture\";\nimport SuzanneNormalTexture from \"./components/Suzanne/NormalTexture\";\nimport SuzannePhysicalMaterial from \"./components/Suzanne/PhysicalMaterial\";\nimport SuzanneStandardMaterial from \"./components/Suzanne/StandardMaterial\";\nimport SuzanneToonMaterial from \"./components/Suzanne/ToonMaterial\";\n\n// Lighting\nimport Lighting from \"./components/Lighting\";\nimport LightingGui from \"./components/Lighting/indexGui\";\nimport LightingStudio from \"./components/Lighting/Studio\";\nimport LightingStudioGui from \"./components/Lighting/StudioGui\";\nimport LightingThreePoint from \"./components/Lighting/ThreePoint\";\nimport LightingThreePointGui from \"./components/Lighting/ThreePointGui\";\n\nconst components = [\n  \"Suzanne\",\n  \"SuzanneMatcapTexture\",\n  \"SuzanneNormalTexture\",\n  \"SuzannePhysicalMaterial\",\n  \"SuzanneStandardMaterial\",\n  \"SuzanneToonMaterial\",\n];\n\nconst lightings = [\"None\", \"Default\", \"Studio\", \"ThreePoint\"];\n\nconst Content = () => {\n  const { showStats } = useControls(\"General\", {\n    showStats: {\n      label: \"Stats\",\n      value: false,\n    },\n  });\n\n  const {\n    showAxesHelper,\n    showGridHelper,\n    useComponent,\n    useLighting,\n    useLightingGui,\n  } = useControls(\"Helpers\", {\n    showAxesHelper: {\n      label: \"Axes Helper\",\n      value: false,\n    },\n    showGridHelper: {\n      label: \"Grid Helper\",\n      value: false,\n    },\n    useComponent: {\n      label: \"Component\",\n      options: components,\n      value: \"Suzanne\",\n    },\n    useLighting: {\n      label: \"Lighting\",\n      options: lightings,\n      value: \"Studio\",\n    },\n    useLightingGui: {\n      label: \"Lighting GUI\",\n      value: false,\n    },\n  });\n\n  function showComponent(name) {\n    return useComponent === name;\n  }\n\n  function showLighting(name) {\n    return useLighting === name;\n  }\n\n  return (\n    <>\n      <OrbitControls enablePan={true} enableRotate={true} enableZoom={true} />\n      {showAxesHelper && <axesHelper />}\n      {showGridHelper && <gridHelper />}\n      {showStats && <Stats />}\n\n      {showLighting(\"Default\") && !useLightingGui && <Lighting />}\n      {showLighting(\"Default\") && useLightingGui && <LightingGui />}\n      {showLighting(\"Studio\") && !useLightingGui && <LightingStudio />}\n      {showLighting(\"Studio\") && useLightingGui && <LightingStudioGui />}\n      {showLighting(\"ThreePoint\") && !useLightingGui && <LightingThreePoint />}\n      {showLighting(\"ThreePoint\") && useLightingGui && (\n        <LightingThreePointGui />\n      )}\n\n      <Suspense fallback={null}>\n\n        {showComponent(\"Suzanne\") && <Suzanne />}\n        {showComponent(\"SuzanneMatcapTexture\") && <SuzanneMatcapTexture />}\n        {showComponent(\"SuzanneNormalTexture\") && <SuzanneNormalTexture />}\n        {showComponent(\"SuzannePhysicalMaterial\") && (\n          <SuzannePhysicalMaterial />\n        )}\n        {showComponent(\"SuzanneStandardMaterial\") && (\n          <SuzanneStandardMaterial />\n        )}\n        {showComponent(\"SuzanneToonMaterial\") && <SuzanneToonMaterial />}\n      </Suspense>\n    </>\n  );\n};\n\nexport default Content;\n","import { Canvas } from \"@react-three/fiber\";\n\nimport Content from \"./Content\";\n\nconst App = () => {\n  return (\n    <Canvas>\n      <Content linear={false} shadows={true} />\n    </Canvas>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}